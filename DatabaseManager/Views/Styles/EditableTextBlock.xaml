<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviours="clr-namespace:DatabaseManager.Views.Behaviours"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:ClassLibrary.Windows.Converters;assembly=ClassLibrary.Windows"
    xmlns:myControls="clr-namespace:DatabaseManager.Views.Controls"
    xmlns:myConverters="clr-namespace:DatabaseManager.Views.Converters">
    <myConverters:InvertedNullOrEmptyToVisibilityConverter x:Key="InvertedNullOrEmptyToVisibilityConverter" />
    <converters:MultiBooleanAndToVisibilityConverter x:Key="MultiBooleanAndToVisibilityConverter" />

    <Style TargetType="{x:Type myControls:EditableTextBlock}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type myControls:EditableTextBlock}">
                    <StackPanel>
                        <TextBlock
                            Name="WatermarkTextBlock"
                            Margin="7,2,0,0"
                            Background="{DynamicResource ControlBackgroundBrush}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="10"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding PropertyName}"
                            TextWrapping="{TemplateBinding TextWrapping}" />

                        <Grid>
                            <TextBox
                                Name="TextBox"
                                controls:TextBoxHelper.ButtonCommand="{TemplateBinding ButtonCommand}"
                                controls:TextBoxHelper.ButtonCommandParameter="{TemplateBinding ButtonCommandParameter}"
                                controls:TextBoxHelper.ButtonContent="{TemplateBinding ButtonContent}"
                                controls:TextBoxHelper.ButtonContentTemplate="{TemplateBinding ButtonContentTemplate}"
                                controls:TextBoxHelper.ButtonFontFamily="{TemplateBinding ButtonFontFamily}"
                                controls:TextBoxHelper.ButtonFontSize="{TemplateBinding ButtonFontSize}"
                                controls:TextBoxHelper.ButtonTemplate="{TemplateBinding ButtonTemplate}"
                                controls:TextBoxHelper.ButtonWidth="{TemplateBinding ButtonWidth}"
                                controls:TextBoxHelper.ClearTextButton="{TemplateBinding ClearTextButton}"
                                controls:TextBoxHelper.HasText="{Binding HasText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{TemplateBinding IsClearTextButtonBehaviorEnabled}"
                                controls:TextBoxHelper.IsMonitoring="{TemplateBinding IsMonitoring}"
                                controls:TextBoxHelper.IsSpellCheckContextMenuEnabled="{TemplateBinding IsSpellCheckContextMenuEnabled}"
                                controls:TextBoxHelper.IsWaitingForData="{TemplateBinding IsWaitingForData}"
                                controls:TextBoxHelper.SelectAllOnFocus="{TemplateBinding SelectAllOnFocus}"
                                controls:TextBoxHelper.TextButton="{TemplateBinding TextButton}"
                                Background="{TemplateBinding Background}"
                                CaretBrush="{TemplateBinding CaretBrush}"
                                CharacterCasing="{TemplateBinding CharacterCasing}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                MaxLength="{TemplateBinding MaxLength}"
                                MaxLines="{TemplateBinding MaxLines}"
                                MinLines="{TemplateBinding MinLines}"
                                SelectionBrush="{TemplateBinding SelectionBrush}"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextDecorations="{TemplateBinding TextDecorations}"
                                TextWrapping="{TemplateBinding TextWrapping}"
                                Visibility="Collapsed" />

                            <TextBlock
                                Name="TextBlock"
                                Margin="6,4,4,6"
                                Background="{TemplateBinding Background}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Text}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextWrapping="{TemplateBinding TextWrapping}" />
                        </Grid>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInEditingMode" Value="True">
                            <Setter TargetName="TextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="TextBlock" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger SourceName="TextBox" Property="Visibility" Value="Visible">
                            <Setter TargetName="TextBox" Property="behaviours:TextBoxBaseBehaviour.Focus" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>